apiVersion: "apps/v1"
kind: "StatefulSet"
metadata:
  name: "redis"
spec:
  serviceName: "redis"
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "redis"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "redis"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
        promtail.io/collect: "true"
    spec:
      serviceAccountName: "redis"
      automountServiceAccountToken: false
      containers:
        - name: "redis"
          image: "bitnami/redis:latest"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: "ALLOW_EMPTY_PASSWORD"
              value: "yes"
          volumeMounts:
            - name: "data"
              mountPath: "/bitnami/redis/data"
          ports:
            - containerPort: 6379
              protocol: "TCP"
              name: "client"
          resources:
            requests:
              memory: "512Mi"
            limits:
              memory: "512Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
            exec:
              command: ["redis-cli", "ping"]
        - name: "exporter"
          image: "bitnami/redis-exporter:latest"
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 9121
              protocol: "TCP"
              name: "metrics"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]

  volumeClaimTemplates:
    - metadata:
        name: "data"
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "local-path"
        resources:
          requests:
            storage: "1Gi"
