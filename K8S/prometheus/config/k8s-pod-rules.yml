groups:
  - name: "Kubernetes pod rules"
    rules:
      - alert: "Pod crash looping"
        expr: 'increase(kube_pod_container_status_restarts_total[1m]) > 3'
        for: "2m"
        labels:
          severity: "warning"
        annotations:
          summary: "Pod crash looping of {{ $labels.namespace }}/{{ $labels.pod }}"
          description: "Pod crash looping of {{ $labels.namespace }}/{{ $labels.pod }}"

      - alert: "Container cpu usage"
        expr: '(sum(rate(container_cpu_usage_seconds_total{name!=""}[2m])) by(namespace, pod, container) / sum(kube_pod_container_resource_limits{resource="cpu"}) by(namespace, pod, container) * 100) > 75'
        for: "2m"
        labels:
          severity: "warning"
        annotations:
          summary: "CPU usage is {{ $value | humanize }} %"
          description: "CPU usage of {{ $labels.namespace }}/{{ $labels.pod }}/{{ $labels.container }} is {{ $value | humanize }} %"

      - alert: "Container cpu usage"
        expr: '(sum(rate(container_cpu_usage_seconds_total{name!=""}[2m])) by(namespace, pod, container) / sum(kube_pod_container_resource_limits{resource="cpu"}) by(namespace, pod, container) * 100) > 80'
        for: "2m"
        labels:
          severity: "error"
        annotations:
          summary: "CPU usage is {{ $value | humanize }} %"
          description: "CPU usage of {{ $labels.namespace }}/{{ $labels.pod }}/{{ $labels.container }} is {{ $value | humanize }} %"

      - alert: "Container memory usage"
        expr: '(sum(container_memory_working_set_bytes{name!=""}) by(namespace, pod, container) / sum(kube_pod_container_resource_limits{resource="memory"}) by(namespace, pod, container) * 100) > 75'
        for: "2m"
        labels:
          severity: "warning"
        annotations:
          summary: "Memory usage is {{ $value | humanize }} %"
          description: "Memory usage of {{ $labels.namespace }}/{{ $labels.pod }}/{{ $labels.container }} is {{ $value | humanize }} %"

      - alert: "Container memory usage"
        expr: '(sum(container_memory_working_set_bytes{name!=""}) by(namespace, pod, container) / sum(kube_pod_container_resource_limits{resource="memory"}) by(namespace, pod, container) * 100) > 80'
        for: "2m"
        labels:
          severity: "error"
        annotations:
          summary: "Memory usage is {{ $value | humanize }} %"
          description: "Memory usage of {{ $labels.namespace }}/{{ $labels.pod }}/{{ $labels.container }} is {{ $value | humanize }} %"
