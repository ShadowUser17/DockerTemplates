apiVersion: "apps/v1"
kind: "StatefulSet"
metadata:
  name: "grafana-loki"
spec:
  serviceName: "grafana-loki"
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "grafana-loki"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "grafana-loki"
      annotations:
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: "grafana-loki"
      securityContext:
        fsGroup: 10001
        runAsUser: 10001
        runAsGroup: 10001
      volumes:
        - name: "config"
          configMap:
            name: "loki-config"
      containers:
        - name: "loki"
          image: "grafana/loki:latest"
          imagePullPolicy: "IfNotPresent"
          args: ["-config.file=/etc/loki/loki.yaml"]
          volumeMounts:
            - name: "config"
              mountPath: "/etc/loki"
            - name: "data"
              mountPath: "/loki"
          ports:
            - name: "http"
              protocol: "TCP"
              containerPort: 3100
          resources:
            requests:
              cpu: "100m"
              memory: "350Mi"
            limits:
              cpu: "100m"
              memory: "350Mi"
          livenessProbe:
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            httpGet:
              path: "/ready"
              port: 3100

  volumeClaimTemplates:
    - metadata:
        name: "data"
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "local-path"
        resources:
          requests:
            storage: "6Gi"
