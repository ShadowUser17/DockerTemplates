apiVersion: "v1"
kind: "Service"
metadata:
  namespace: "testing"
  name: "thanos-query"
spec:
  selector:
    app.kubernetes.io/name: "thanos-query"
  ports:
    - name: "grpc"
      port: 10901
      protocol: "TCP"
      targetPort: "grpc"
    - name: "http"
      port: 9090
      protocol: "TCP"
      targetPort: "http"

---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  namespace: "testing"
  name: "thanos-query"
spec:
  replicas: 1
  strategy:
    type: "Recreate"
  selector:
    matchLabels:
      app.kubernetes.io/name: "thanos-query"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "thanos-query"
      annotations:
        promtail.io/collect: "true"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      serviceAccountName: "thanos-query"
      securityContext:
        runAsUser: 65534
        fsGroup: 65534
      containers:
        - name: "thanos"
          image: "thanosio/thanos:latest"
          imagePullPolicy: "IfNotPresent"
          args:
            - "query"
            - "--log.level=info"
            - "--log.format=logfmt"
            - "--grpc-address=0.0.0.0:10901"
            - "--http-address=0.0.0.0:9090"
            - "--query.auto-downsampling"
            - "--query.replica-label=rule_replica"
            - "--query.replica-label=prometheus_replica"
            - "--endpoint=dnssrv+_grpc._tcp.thanos-prometheus.testing.svc:10901"
            - "--endpoint=dnssrv+_grpc._tcp.thanos-receive.testing.svc:10901"
            - "--endpoint=dnssrv+_grpc._tcp.thanos-store.testing.svc:10901"
          ports:
            - name: "grpc"
              protocol: "TCP"
              containerPort: 10901
            - name: "http"
              protocol: "TCP"
              containerPort: 9090
          resources:
            requests:
              cpu: "50m"
              memory: "120Mi"
            limits:
              cpu: "50m"
              memory: "120Mi"
          livenessProbe:
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 5
            httpGet:
              path: "/-/healthy"
              port: "http"
              scheme: "HTTP"
          readinessProbe:
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 5
            httpGet:
              path: "/-/ready"
              port: "http"
              scheme: "HTTP"
