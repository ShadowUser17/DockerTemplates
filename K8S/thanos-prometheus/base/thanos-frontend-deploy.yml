apiVersion: "v1"
kind: "Service"
metadata:
  namespace: "testing"
  name: "thanos-front"
spec:
  selector:
    app.kubernetes.io/name: "thanos-front"
  ports:
    - name: "http"
      port: 9090
      protocol: "TCP"
      targetPort: 9090

---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  namespace: "testing"
  name: "thanos-front"
spec:
  replicas: 1
  strategy:
    type: "Recreate"
  selector:
    matchLabels:
      app.kubernetes.io/name: "thanos-front"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "thanos-front"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      serviceAccountName: "thanos-query"
      securityContext:
        runAsUser: 65534
        fsGroup: 65534
      containers:
        - name: "thanos"
          image: "thanosio/thanos:latest"
          imagePullPolicy: "IfNotPresent"
          args:
            - "query-frontend"
            - "--log.level=info"
            - "--log.format=logfmt"
            - "--http-address=0.0.0.0:9090"
            - "--query-frontend.downstream-url=http://thanos-query.testing.svc:9090"
          ports:
            - name: "http"
              protocol: "TCP"
              containerPort: 9090
          resources:
            requests:
              cpu: "100m"
              memory: "150Mi"
            limits:
              cpu: "100m"
              memory: "200Mi"
          livenessProbe:
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 5
            httpGet:
              path: "/-/healthy"
              port: 9090
              scheme: "HTTP"
          readinessProbe:
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 5
            httpGet:
              path: "/-/ready"
              port: 9090
              scheme: "HTTP"
