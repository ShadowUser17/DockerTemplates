global:
  scrape_interval: "20s"
  evaluation_interval: "20s"

alerting:
  alertmanagers:
    - static_configs:
        - targets: ["alertmanager.prometheus.svc:9093"]

rule_files:
  - "prometheus-rules.yml"
  - "prometheus-k8s-rules.yml"
  - "prometheus-pod-rules.yml"
  - "prometheus-node-rules.yml"
  - "prometheus-mesh-rules.yml"

scrape_configs:
  - job_name: "prometheus"
    scrape_interval: "30s"
    static_configs:
      - targets: ["127.0.0.1:9090"]
        labels:
          group: "self"

  - job_name: "kube-state-metrics"
    scrape_interval: "30s"
    static_configs:
      - targets: ["kube-state-metrics.prometheus.svc:8080"]
        labels:
          group: "k8s"

  - job_name: "k8s-apiserver"
    scrape_interval: "30s"
    scheme: "https"
    kubernetes_sd_configs:
      - role: "endpoints"
    tls_config:
      ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    authorization:
      credentials_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
    relabel_configs:
      - source_labels: ["__meta_kubernetes_namespace", "__meta_kubernetes_service_name", "__meta_kubernetes_endpoint_port_name"]
        regex: "default;kubernetes;https"
        action: "keep"

  - job_name: "k8s-kubelet-metrics"
    scrape_interval: "30s"
    scheme: "https"
    kubernetes_sd_configs:
      - role: "node"
    tls_config:
      ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    authorization:
      credentials_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
    relabel_configs:
      - regex: "__meta_kubernetes_node_label_(.+)"
        action: "labelmap"

  - job_name: "k8s-cadvisor-metrics"
    scrape_interval: "30s"
    metrics_path: "/metrics/cadvisor"
    scheme: "https"
    kubernetes_sd_configs:
      - role: "node"
    tls_config:
      ca_file: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    authorization:
      credentials_file: "/var/run/secrets/kubernetes.io/serviceaccount/token"
    relabel_configs:
      - regex: "__meta_kubernetes_node_label_(.+)"
        action: "labelmap"

  - job_name: "k8s-node-metrics"
    scrape_interval: "30s"
    honor_timestamps: true
    kubernetes_sd_configs:
      - role: "node"
    relabel_configs:
      - regex: "__meta_kubernetes_node_label_(.+)"
        action: "labelmap"
      - source_labels: ["__address__"]
        regex: "([^:]+)(?::\\d+)?"
        target_label: "__address__"
        replacement: "$1:9100"
        action: "replace"

  - job_name: "k8s-pod-metrics"
    scrape_interval: "30s"
    kubernetes_sd_configs:
      - role: "pod"
    relabel_configs:
      - source_labels: ["__meta_kubernetes_pod_annotation_prometheus_io_scrape"]
        action: "keep"
        regex: "true"
      - source_labels: ["__meta_kubernetes_pod_annotation_prometheus_io_path"]
        action: "replace"
        target_label: "__metrics_path__"
        regex: "(.+)"
      - source_labels: ["__address__", "__meta_kubernetes_pod_annotation_prometheus_io_port"]
        action: "replace"
        regex: '([^:]+)(?::\d+)?;(\d+)'
        replacement: "$1:$2"
        target_label: "__address__"
      - action: "labelmap"
        regex: "__meta_kubernetes_pod_label_(.+)"
      - source_labels: ["__meta_kubernetes_namespace"]
        action: "replace"
        target_label: "namespace"
      - source_labels: ["__meta_kubernetes_pod_name"]
        action: "replace"
        target_label: "pod"

  - job_name: "k8s-service-metrics"
    scrape_interval: "30s"
    kubernetes_sd_configs:
      - role: "endpoints"
    relabel_configs:
      - source_labels: ["__meta_kubernetes_service_annotation_prometheus_io_scrape"]
        action: "keep"
        regex: "true"
      - source_labels: ["__meta_kubernetes_service_annotation_prometheus_io_path"]
        action: "replace"
        target_label: "__metrics_path__"
        regex: "(.+)"
      - source_labels: ["__address__", "__meta_kubernetes_service_annotation_prometheus_io_port"]
        action: "replace"
        regex: '([^:]+)(?::\d+)?;(\d+)'
        replacement: "$1:$2"
        target_label: "__address__"
      - source_labels: ["__meta_kubernetes_service_annotation_prometheus_io_scheme"]
        action: "replace"
        target_label: "__scheme__"
        regex: "(https?)"
      - action: "labelmap"
        regex: "__meta_kubernetes_service_label_(.+)"
      - source_labels: ["__meta_kubernetes_namespace"]
        action: "replace"
        target_label: "namespace"
      - source_labels: ["__meta_kubernetes_service_name"]
        action: "replace"
        target_label: "service"

  - job_name: "k8s-service-probe"
    scrape_interval: "30s"
    metrics_path: "/probe"
    params:
      module: ["http_2xx"]
    kubernetes_sd_configs:
      - role: "service"
    relabel_configs:
      - source_labels: ["__meta_kubernetes_service_annotation_prometheus_blackbox_probe"]
        action: "keep"
        regex: "true"
      - source_labels: ["__address__"]
        target_label: "__param_target"
      - target_label: "__address__"
        replacement: "blackbox-exporter.prometheus.svc:9115"
      - source_labels: ["__param_target"]
        target_label: "instance"
      - action: "labelmap"
        regex: "__meta_kubernetes_service_label_(.+)"
      - source_labels: ["__meta_kubernetes_namespace"]
        target_label: "namespace"
      - source_labels: ["__meta_kubernetes_service_name"]
        target_label: "service"

  - job_name: "k8s-ingresse-probe"
    scrape_interval: "30s"
    metrics_path: "/probe"
    params:
      module: ["http_2xx"]
    kubernetes_sd_configs:
      - role: "ingress"
    relabel_configs:
      - source_labels: ["__meta_kubernetes_ingress_annotation_prometheus_blackbox_probe"]
        action: "keep"
        regex: "true"
      - source_labels: ["__meta_kubernetes_ingress_scheme", "__address__", "__meta_kubernetes_ingress_path"]
        regex: '(.+);(.+);(.+)'
        replacement: "${1}://${2}${3}"
        target_label: "__param_target"
      - target_label: "__address__"
        replacement: "blackbox-exporter.prometheus.svc:9115"
      - source_labels: ["__param_target"]
        target_label: "instance"
      - action: "labelmap"
        regex: "__meta_kubernetes_ingress_label_(.+)"
      - source_labels: ["__meta_kubernetes_namespace"]
        target_label: "namespace"
      - source_labels: ["__meta_kubernetes_ingress_name"]
        target_label: "ingress"
