apiVersion: "v1"
kind: "ServiceAccount"
metadata:
  name: "thanos-store"
  namespace: "testing"

---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "thanos-store"
  namespace: "testing"
spec:
  selector:
    app.kubernetes.io/name: "thanos-store"
  ports:
    - name: "grpc"
      port: 10901
      targetPort: 10901
    - name: "http"
      port: 10902
      targetPort: 10902

---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "thanos-store"
  namespace: "testing"
spec:
  replicas: 1
  strategy:
    type: "Recreate"
  selector:
    matchLabels:
      app.kubernetes.io/name: "thanos-store"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "thanos-store"
        required.storage: "s3"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "10902"
    spec:
      terminationGracePeriodSeconds: 120
      serviceAccountName: "thanos-store"
      securityContext:
        runAsUser: 65534
        fsGroup: 65534
      volumes:
        - name: "data"
          emptyDir: {}
        - name: "config"
          configMap:
            name: "thanos-bucket-config"
      containers:
        - name: "thanos"
          image: "thanosio/thanos:latest"
          imagePullPolicy: "IfNotPresent"
          args:
            - "store"
            - "--log.level=info"
            - "--log.format=logfmt"
            - "--data-dir=/var/thanos/data"
            - "--grpc-address=0.0.0.0:10901"
            - "--http-address=0.0.0.0:10902"
            - "--objstore.config-file=/var/thanos/config.yml"
            - "--ignore-deletion-marks-delay=12h"
          volumeMounts:
            - name: "data"
              mountPath: "/var/thanos/data"
            - name: "config"
              mountPath: "/var/thanos"
          ports:
            - name: "grpc"
              containerPort: 10901
            - name: "http"
              containerPort: 10902
          # resources:
          #   requests:
          #     cpu: "50m"
          #     memory: "150Mi"
          #   limits:
          #     cpu: "50m"
          #     memory: "150Mi"
          livenessProbe:
            initialDelaySeconds: 20
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 5
            httpGet:
              path: "/-/healthy"
              port: 10902
              scheme: "HTTP"
          readinessProbe:
            initialDelaySeconds: 20
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 5
            httpGet:
              path: "/-/ready"
              port: 10902
              scheme: "HTTP"
