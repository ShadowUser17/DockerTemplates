apiVersion: "apps/v1"
kind: "StatefulSet"
metadata:
  namespace: "testing"
  name: "minio"
spec:
  serviceName: "minio"
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "minio"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "minio"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9000"
        prometheus.io/path: "/minio/v2/metrics/cluster"
    spec:
      serviceAccountName: "minio"
      volumes:
        - name: "tmp"
          emptyDir: {}
      containers:
        - name: "minio"
          image: "minio/minio:latest"
          imagePullPolicy: "IfNotPresent"
          envFrom:
            - configMapRef:
                name: "minio-config"
          args:
            - "server"
            - "/data"
            - "--console-address"
            - ":9001"
          volumeMounts:
            - name: "tmp"
              mountPath: "/tmp"
            - name: "data"
              mountPath: "/data"
          ports:
            - containerPort: 9000
              protocol: "TCP"
              name: "http"
            - containerPort: 9001
              protocol: "TCP"
              name: "console"
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "100m"
              memory: "256Mi"
          securityContext:
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          livenessProbe:
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
            httpGet:
              path: "/minio/health/live"
              port: 9000

  volumeClaimTemplates:
    - metadata:
        name: "data"
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "local-path"
        resources:
          requests:
            storage: "6Gi"
