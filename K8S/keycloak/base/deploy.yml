apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  namespace: "testing"
  name: "keycloak"
spec:
  replicas: 1
  strategy:
    type: "Recreate"
  selector:
    matchLabels:
      app.kubernetes.io/name: "keycloak"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "keycloak"
        required.db: "psql"
    spec:
      serviceAccount: "keycloak"
      volumes:
        - name: "tmp"
          emptyDir: {}
        # - name: "data"
        #   persistentVolumeClaim:
        #     claimName: "keycloak-data"
      containers:
        - name: "keycloak"
          image: "quay.io/keycloak/keycloak:latest"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: "KEYCLOAK_ADMIN"
              value: "admin"
            - name: "KEYCLOAK_ADMIN_PASSWORD"
              value: "admin"
            - name: "DB_VENDOR"
              value: "postgres"
            - name: "DB_ADDR"
              value: "postgres.testing.svc"
            - name: "DB_PORT"
              value: "5432"
            - name: "DB_DATABASE"
              value: "keycloak"
            - name: "DB_USER"
              value: "testing"
            - name: "DB_PASSWORD"
              value: "testing"
          volumeMounts:
            - name: "tmp"
              mountPath: "/tmp"
            # - name: "data"
            #   mountPath: "/opt/jboss/keycloak/standalone"
          ports:
            - containerPort: 8080
              protocol: "TCP"
              name: "http"
          # securityContext:
          #   readOnlyRootFilesystem: true
          # livenessProbe:
          #   initialDelaySeconds: 20
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   httpGet:
          #     path: "/health/live"
          #     port: 8080
          # readinessProbe:
          #   initialDelaySeconds: 20
          #   periodSeconds: 10
          #   timeoutSeconds: 5
          #   httpGet:
          #     path: "/health/ready"
          #     port: 8080
