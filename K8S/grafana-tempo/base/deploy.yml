apiVersion: "apps/v1"
kind: "StatefulSet"
metadata:
  name: "grafana-tempo"
spec:
  serviceName: "grafana-tempo"
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "grafana-tempo"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "grafana-tempo"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3200"
    spec:
      serviceAccountName: "grafana-tempo"
      automountServiceAccountToken: false
      volumes:
        - name: "tmp"
          emptyDir: {}
        - name: "config"
          configMap:
            name: "grafana-tempo-config"
      containers:
        - name: "tempo"
          image: "grafana/tempo:latest"
          imagePullPolicy: "IfNotPresent"
          args: ["-config.file=/etc/tempo/config.yaml"]
          volumeMounts:
            - name: "tmp"
              mountPath: "/tmp"
            - name: "config"
              mountPath: "/etc/tempo"
            - name: "data"
              mountPath: "/var/lib/tempo"
          ports:
            - name: "tempo"
              protocol: "TCP"
              containerPort: 3200
            - name: "zipkin"
              protocol: "TCP"
              containerPort: 9411
            - name: "otlp-grpc"
              protocol: "TCP"
              containerPort: 4317
            - name: "otlp-http"
              protocol: "TCP"
              containerPort: 4318
            - name: "jaeger"
              protocol: "TCP"
              containerPort: 14268
          resources:
            requests:
              cpu: "100m"
              memory: "300Mi"
            limits:
              cpu: "100m"
              memory: "300Mi"
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          readinessProbe:
            initialDelaySeconds: 10
            timeoutSeconds: 5
            httpGet:
              path: "/ready"
              port: "tempo"

  volumeClaimTemplates:
    - metadata:
        name: "data"
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "longhorn"
        resources:
          requests:
            storage: "6Gi"
