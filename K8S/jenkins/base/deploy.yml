apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  namespace: "jenkins"
  name: "jenkins"
spec:
  replicas: 1
  strategy:
    type: "Recreate"
  selector:
    matchLabels:
      app.kubernetes.io/name: "jenkins"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "jenkins"
      annotations:
        promtail.io/collect: "true"
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/prometheus/"
    spec:
      serviceAccountName: "jenkins"
      volumes:
        - name: "tmp"
          emptyDir: {}
        - name: "jenkins-data"
          persistentVolumeClaim:
            claimName: "jenkins-data"
      containers:
        - name: "jenkins"
          image: "jenkins/jenkins:lts"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: "JAVA_OPTS"
              value: "-Xmx512m"
          volumeMounts:
            - name: "tmp"
              mountPath: "/tmp"
            - name: "jenkins-data"
              mountPath: "/var/jenkins_home"
          ports:
            - name: "http"
              containerPort: 8080
            - name: "jnlp"
              containerPort: 50000
          resources:
            requests:
              cpu: "300m"
              memory: "512Mi"
            limits:
              cpu: "300m"
              memory: "1024Mi"
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          livenessProbe:
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
            httpGet:
              path: "/login"
              port: "http"
          readinessProbe:
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            httpGet:
              path: "/login"
              port: "http"
