apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "memcached"
spec:
  replicas: 1
  strategy:
    type: "Recreate"
  selector:
    matchLabels:
      app.kubernetes.io/name: "memcached"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "memcached"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9150"
        promtail.io/collect: "true"
    spec:
      serviceAccountName: "memcached"
      automountServiceAccountToken: false
      containers:
        - name: "memcached"
          image: "bitnami/memcached:latest"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: "MEMCACHED_THREADS"
              value: "4"
            - name: "MEMCACHED_CACHE_SIZE"
              value: "512"
            - name: "MEMCACHED_MAX_CONNECTIONS"
              value: "1000"
          ports:
            - containerPort: 11211
              protocol: "TCP"
              name: "client"
          resources:
            requests:
              cpu: "100m"
              memory: "512Mi"
            limits:
              cpu: "200m"
              memory: "512Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          livenessProbe:
            initialDelaySeconds: 30
            failureThreshold: 5
            timeoutSeconds: 5
            tcpSocket:
              port: "client"
          readinessProbe:
            initialDelaySeconds: 5
            failureThreshold: 5
            timeoutSeconds: 5
            tcpSocket:
              port: "client"
        - name: "exporter"
          image: "bitnami/memcached-exporter:latest"
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 9150
              protocol: "TCP"
              name: "metrics"
          resources:
            requests:
              cpu: "30m"
              memory: "50Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
