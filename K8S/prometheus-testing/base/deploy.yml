apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  namespace: "testing"
  name: "prometheus-testing"
spec:
  replicas: 1
  strategy:
    type: "Recreate"
  selector:
    matchLabels:
      app.kubernetes.io/name: "prometheus-testing"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "prometheus-testing"
    spec:
      terminationGracePeriodSeconds: 30
      serviceAccountName: "prometheus-testing"
      volumes:
        - name: "tmp"
          emptyDir: {}
        - name: "config"
          configMap:
            name: "prometheus-testing-config"
        - name: "data"
          persistentVolumeClaim:
            claimName: "prometheus-testing-data"
      containers:
        - name: "prometheus"
          image: "prom/prometheus:latest"
          imagePullPolicy: "IfNotPresent"
          args:
            - "--web.enable-remote-write-receiver"
            - "--web.enable-lifecycle"
            - "--storage.tsdb.path=/prometheus"
            - "--storage.tsdb.retention.time=10d"
            - "--config.file=/etc/prometheus/prometheus.yml"
          volumeMounts:
            - name: "tmp"
              mountPath: "/tmp"
            - name: "config"
              mountPath: "/etc/prometheus"
            - name: "data"
              mountPath: "/prometheus"
          ports:
            - name: "http"
              protocol: "TCP"
              containerPort: 9090
          resources:
            requests:
              cpu: "100m"
              memory: "500Mi"
            limits:
              cpu: "100m"
              memory: "700Mi"
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          livenessProbe:
            initialDelaySeconds: 10
            timeoutSeconds: 5
            httpGet:
              path: "/-/healthy"
              port: 9090
          readinessProbe:
            initialDelaySeconds: 10
            timeoutSeconds: 5
            httpGet:
              path: "/-/ready"
              port: 9090
